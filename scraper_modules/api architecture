default_uri_schemata = {
	'craigslist': function( listing ) { return listing.region + "craigslist.org/src=?" + listing...; },
	'ebay': fn...
}


House = new Listing()

House.bedrooms = 2;

House.uri_schemata = {
	'craigslist': fn () {}
}




// Define Listing
var listing_properties += {
  	'type'			: { type: String, 	default: 'for sale' },
	'name'			: { type: String, 	default: 'none' },
	'min'			: { type: Number, 	default: 0 },
	'max'			: { type: Number, 	default: 2500 },
	'cities'		: { type: Array },
	'last_scrape'	: { type: Date },
	'results'		: [ ResultSchema ]
};

var listing_methods += {
	create(),
	read(),
	update(),
	destroy(),
	build_queries( template ) => this.cities.map( return filled_template; )
};


scraper_methods = {
	scrape( listings, (10 min/listings.length), results.push( listing ) )	
};


var result_properties = {
	'href'	: { type: String },
	'text'	: { type: String },
	'date'	: { type: Date }
};

var result_methods = {

};



mailer_methods =  {
	mail( email, listings ); delete(results);
};


// ========================= usage

							// 5 listings
scraper.scrape( listings.all, 2min, results.push( listing ) );

request( 'api/listings', ( 15 min ), mail( email, listings ) );